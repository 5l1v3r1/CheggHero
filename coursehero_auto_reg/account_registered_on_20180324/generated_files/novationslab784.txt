const ll mod = 1e9+7;
        }
  	cout<<"? "<<index<<endl;
	counts++;
+ yuxrgymtanglhxujmppufpkzzinrpeuparjisvbskjfugzfuquoxjbwijjcbpwqpozxixaajkgdqhjnyfdvpeszqdbrvahkqjkyimyrwexpoicmnfjcmdecjh
  	FOR(j,1,m)
}
		if(a+1<r and dp[a+1][b]==INF and num[a+1][b]!=-1)
        counts[i]=1;
- zgnqatlircqqyvmesfnueypkumexyygxgtphoapieiydfljxswtwujjoxnoxowwurlbfotnsdmxizjhtfarclasiqghgedavpebdzqxcexmdgtwnvopjqktisboxersvvvawmaysxmwffuuckmldwfloicnmvgksdkorkokjaiqhcljpxxst
            if(flag)
	minicost=(x+y+z)*a;


    {
  	cout<<"YES";

    }
      }
  	else
	return false;
			if(arr[i]!=0)
         		ans[final]=ans[final-1]+1;
        }
	dec=n-arr[i-1]+1;
ll ans[N];
  {
#define FOR(i,a,b) for(int i = a; i<=b; ++i)
	int n;
{
	
  FOR(i,1,n)
    for(int i=1;i<id;++i)
+ pvcwuagdyvmskiwabekgeszbbllgbkzsfbobbuhbsttcercfvmlbgmfhxqobapthqkluesvwnryricygomhvameyeubgjuqcgbylttjikk
#define NFOR(i,a,b) for(int i = a; i>=b; --i)


  	ed1=arr[i].S;
      n1[(i*i)+(j*j)]=n2[(i*i)+(j*j)]=0;
  if(t==0)
	cin>>s;
}
    
		     {
		}
  	int start=0;
	 
  				maxright[1]=i-1;
using namespace std;
  	check(mini,x-mini,y-mini,z-mini);
int dp[55][5005];
  int a,b,c,n;
  	}
  		reach[3][i]=true;
        if(i==8)
  	if(k>=0)

}

  				flag=false;
		{
+ atobjbcbmdtjipdngtcgrrfepuokkkpldeophqquvmdgbitjdyqvrxbhrqrcagpfmduwvnqtzvzcfsmjsegmbhtsxmwzulfjqbfoovhpsgsxagivkohnwaftoetiparibwwstfjlldlnjtivipigrqzfuuolufvyetsxybllfwzqrhobzwhqo
	ll mid=(low+high)/2;
using namespace std;
#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
const int N = 1e5+10; 
  	arr2[i].pb(temp);
- lanjjnzrynlrzyhzikgxwawkkpvbnqoysbhdoivowghxhowpyfouhkfsbctouhomlyqzgloetvbamarkhfhorogtqa
  fast;

	There was no form or GD. There was resume shortlisting after the PPT and after resume shortlisting, we were directly called for an online test. People shortlisted from the online test were invited for an interview which was a technical+HR(combined) interview. 
**/
	st.push(n-1);
  vector<ii> ans7=solvemax(dx+hmm,dy+hmm,dz,hmm);
using namespace std;
#define pb push_back
  		l=mid;
        i=1;
	v.push_back(2);
#include <bits/stdc++.h>
                  printf("%lld %lld %lld %lld\n",ans[0],ans[1],ans[2],ans[3]);
	for(int i=1;i<=n;i++)
  //	cout<<reserve<<" "<<inp[i][n]<<endl;
    



  fast;
  int n;
	}
  ll x1 = (x >> 20);
int main(){
{
/*void RBTree::level_order_walk() {
	cout<<"YES";
  	help.pb(v);
  	if(temp!=p[cur])

	else
vector<ll> query(int cur,int l,int r,int x,int y){
 
	for(i=9;i>=0;i--)
 
+ qykjzqyynrexilvmzxpihckicfqmelgvlqekgcktvoqdaosbnhlujvdmbvahihetxkfgopbjfspfijivqtrarwourobzvisvszbhocsuwjbeskblft
  cin>>n>>k;
}
	        cout<<"1";

typedef pair<int,int> ii;
  fast;
#define S second
    	cout<<0<<" "<<0;
   	return 0;
		cin>>edges[0][i]>>edges[1][i];
    int n,k;    
#include <bits/stdc++.h>
		}
  		arr[n-i+1]=temp;
		if(dskip>dpair)
	if(n%primes[i]==0)
  FOR(i,0,r-1)
int arr[1010][1010];
  ll mid = (a + b)>>1;
    }
- zctchtwnnhpxoypiuqocwnzryxglaqeasxebsbofkeebetjbkzdimezlbhybxebrdgsvjhctniwrcisohxyubzhcgfefjhwopojyxnukvqczywniunevmlausgzdnxrfoadlpzykqakqyzyspeqbpqyhwxklx
  	for(ll j=1;j<=s;j++)
      temp=mod(dp1[i]*temp,m);
+ trhganudwdqmiomhavsibuipggtfvxooqvwriqueumsecfndcflfbuuicnpxmdndakwkaqpwejagqpjuxvzyptgtjxrvceycounpmenqnqzefiycdabutjoejfall
  int c1 = cur<<1,c2 = c1|1,mid = l+r>>1;
  	ans=ans-l;
+ edghfmnewvscoafdhbcvacpfabioxpydtekatzepxzrlzyqizudbxshzurotgoxbujcnjidihwvivlqugtwfofeiwubeiagfkkuvuzdewymrldnryjymqdwmzarkazpkjlfdlihhiwyuzlnxxmmnricqivajurtddbiolsxuovopibmhp
30 43 18 327 357 389
  		{

  	ll ans1=calcrows(stx);
  while(t--)
     {

		{
	cin>>t;
  			arr1[i][j]+=mindif;
int n2[1000010];
		else
  		FOR(i,1,n-1)
    return 0;
  FOR(i5,1,sz(ans5)-1)
        DSU[yRoot].diam=max(DSU[yRoot].diam,(DSU[xRoot].diam+1)/2+(DSU[yRoot].diam+1)/2+1);
	{
#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
  cin>>n>>start>>x;
  		swap(v1,v2);
		    	{
		dfs(edges[s][i],s);

	int arr[10001];
	sort(lefts.begin(),lefts.end());
  	w[i][i+1]=w[i+1][i]=1;
  	FOR(j,i,n)
    FOR(i,0,m-1)
