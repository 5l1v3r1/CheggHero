    scanf("%d",&q);
                 }

	//cout<<"ans is "<<ans<<endl; 
	{
- whpmgmcmoejyvswctkzwfhzruyrpmowlxnxecbsqgcqdwpfpbenhnoaimszaivnfknlmoecugvxcmftnliwzwxhkrgmzdaenn
                 	if(arr[i+1]-arr[i]!=diff)
  
  cin>>m;
		len=s1.length();

using namespace std;
    cout<<"? "<<1<<" "<<a<<" "<<n<<" "<<n<<endl;
    if(sum2!=sum1)
    		cin>>arr[i];
		{
VI res[1500];
	cin>>s>>s1;
#define pb push_back
}
#define present(c,x) (find(all(c),x) != (c).end())  // for vector
    maxi=max(m3+o3+p3,maxi);
	cin>>n>>m;
const int N = 1e3+10; 
			cout<<"C";
int main(){
  			{
			cur=trie[cur][bit];
                 
        A[2*x].mul=1;

  FOR(i,0,n-1)


const ll INF = 1e18;
      big_row(1,4);
			if(arr2(-1))
+ yfkkudjnwydfunlrxvjahbedsoyadzrbfbnbewocushrfuifqrhxvlbnabpdcgghhtlnrzpot
int main(){
   for(int i=0;i<t.size();i++){
		if(edges[source][i]!=par)
	else if(b2+l3<=l1 && l2<=b1 && b3<=b1)
int main(){
			if(arr[i]>0)
  	int x,y;
int main(){
		cin>>arr[i];
		len[first][k]=1;
  	typ[j]=1;
  {
+ eiephzcgpaaogjezvtipsvqlqamemmqswujdwllnnmdtxjuudejxabisbvxpjpjfjslhfwvukaphkmbpqmmsnwlrrkiczsikmvsurpoergnbsrq
	}
	for(int i=0;i<n;i++)
		k=i+1;
  	
#define mp make_pair
  {
  }
	    for(int j=0;j<n;j++){
    {
  {
    while(A[2*x].sum>M)
		return false;
				flag=0;
#include <bits/stdc++.h>
#define sz(x) (int)x.size() 
  			val2=val2 | vals;
	}
	{
#define fill(a,x) memset(a,x,sizeof(a)) 
	}
  	names[i]+=alphabet[i-1];
#define S second
  cin>>n>>m;
  	while(r-l>1)
	}
  cout<<s.substr(0,ans);
    		i++;
bool done[N];
			partial=(partial)+term
    }
	
			}
	int n;
      big_row(15,0);
    {
	            }

	return 0;
	{
  			for(int j=2*i-1;j<N;j+=i)
using namespace std;
56
+ kwzjnnhnracaoiklmeyquvkfgcnyybnkxnvkccytecuumgfzkfrgcdoifbifeypblmonooguqcodiveucxbearpiuznzxfcirqvigeexi

14588

  		ans.pb(mp(4,cnt3));

#define F first
	return 0;
int main(){
        
  {
    for(int i=3;i<MAX;i+=2)
  cout<<sz(ans)<<endl;
	        count=1;
  	for(ll j=i+1;j<=n;j++){
		ll temp2=0;
int main(){
		if(mark[v])	continue ;
    {
	}
  fill(donev,0);
  		if(n%i==0)
  	if(a==c and a!=b)

  		C[i].clear();

  ans.clear();
	flag=1;
  	int temp;
  		dp[i]=index;
	cout<<n-1;
