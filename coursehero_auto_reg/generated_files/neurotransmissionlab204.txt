  return 0;
			
#define sz(x) (int)x.size() 
    FOR(k,dz,dz+1)
  }

typedef long long ll;
  		int temp;
  	    big_row(i,0);
#define fill(a,x) memset(a,x,sizeof(a)) 
  int fans=0;
  	}
  fill(yes,0);
	{
#define FOR(i,a,b) for(int i = a; i<=b; ++i)
int main()
			cur[3]++;
    }
  	double rad=(double)(r-1);
		done[a]++;

	// your code goes here

#define pb push_back
		dp[i]=0;
	while(t--)
  }
  PT v = (b-a)/d;
				s[a-1]=c;

                  arr[k-1]=dig[arr[k-1]-'0'+1];

  	cin>>n>>m;
		else
int timer=1;
  	}
#define NFOR(i,a,b) for(int i = a; i>=b; --i)
  fill(last,-1);
  		query3(1,1,n,l,r,v,w);
int main()
    {

        {
#define FOR(i,a,b) for(int i = a; i<=b; ++i)
    }
using namespace std;
       if (exact[freq[arr[i]]]==0)
    return;
               	return 0;
typedef long long ll;
  		last[u]=actual[v];
}
	
  {
			continue;
using namespace std;
}
  mb[1]=1;
		best2=w[2][cur[2]];
bool present[1000010];
using namespace std;
  	ll r=1000000;
#define F first



    cin>>p1>>p2>>p3;
 			continue;
vector<int>v;
  } 
		
    	{
  
#define NFOR(i,a,b) for(int i = a; i>=b; --i)
  			continue;
  freopen("in.txt", "r", stdin);
#define sz(x) (int)x.size() 
int dp[55][55][5005];
    		break;
    ll maxpos=0;
		return;
  }
  cout<<ans[i]<<" ";


	//cout<<"\ncall to "<<index<<endl;
			if((n-i)%7==0)
#include <bits/stdc++.h>
		    
                 		flag=false;
            r0++;

+ pbjjmdjemnwrnltnwjugpwzeiznppkegmnqasbefocydorrmdltshuxrtkgkwnrkajlvmrcbuaeitvwwiprqlojfasryfklfvycirejlepvylswtjnlvdvcfnvgsgrzbrcliiuwnktnxnlszzgwedyksvsmdjlhapskangpzacynpqmoykvbiftgxfjitqkkjumyd
        for(int i=0;i<n-1;i++)
#define pb push_back
    A[2*x].mul=(A[2*x].mul*A[x].mul)%M;
#define fill(a,x) memset(a,x,sizeof(a)) 

        result=i;
		
#define pb push_back
      	if(s[i]==0)
		{

using namespace std;
	temp=abs(temp);
        	index++;
#define FOR(i,a,b) for(int i = a; i<=b; ++i)

        diff=arr[1]-arr[0];
int main(){
#include <bits/stdc++.h>
    pga.transform(true);  // inverse transform
  {
		cout<<n-m;
  FOR(i,2,n)
			{
             		s[i]=s[n-1-i];
	
                 {
                double q2=arr[0][1]-temp;
#define nloop(i,a,b) for(int i= int(a);i>=int(b);--i)
