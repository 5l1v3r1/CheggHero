                 	{
  return 0;
	cin>>n;
	else
       if(freq[arr[i]]>=maxi)
{
}
  		
#define pb push_back
	            }

  	edges[ver[t][curr]].pb(mp(l,0));
    return par[0][u];
#define NFOR(i,a,b) for(int i = a; i>=b; --i)
typedef pair<int, int> ii;
void prefix(int n)

   }

			//delete y;
       }
		return true;
  		ansfor[i]+=mod;
  	{
		if(pos[i]-sp[i]*t>right-eps or pos[i]+sp[i]*t<left+eps)
  int n,q;
  		}
		sort(score,score+11);
  sums[i]=mods(mods(sums[i-1],mod)+mods(dp[i],mod),mod);
	
#define S second
    for(int i=flag+1;i<=n;i++)
    return s[curr];
				arr0[i]=max(arr0[i],arr1[j]+arr[i]);
	int t,n,x,i,small,sum;
#define S second
        if (used[c[x]] != used[i]) 
    {
	    }
		int flag=1;
#define sz(x) (int)x.size() 
#define present(c,x) (find(all(c),x) != (c).end())  // for vector
  	}
    if (inverse)
#define NFOR(i,a,b) for(int i = a; i>=b; --i)
				total+=freq[i];
#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
  
#define F first
    a.pb(coeff[i][j]);

  	{
	int curL=1,curR=0;
    treee[node]=mul((b-a+1),value);
	counts2.clear();
#define S second

  cout<<dp[n][k];
const ll mod = 1e9+7;
	     
	{
	dis[s] = 0;
  return 0;
			for(int j=0;j<n;j++)
#include<iostream>
while(t--)
int n=end-start;
    used[v] = q;

  cin>>x[i]>>y[i];


#define F first
  		ans+=12;
	cout<<1;
    }

			ans=inp;
    if(c==3){
+ naagcueadbgeuzvxyzxysmhafzlpthxihxojusjxwpcsqzqrapps

  fast;
      double n2=(n+.2)/2;
    }
+ dwurvzvhuzwqfbconjhllbhwxdgclfrodniyoffjfdbmedbtmkfzmmwjreofjhtmud
 	arr.pb(mp(l[i],d));
  		{
  			if(cur[k][j]>C[k]&&cur[k][i]>0&&D[i]>0){
  		if(route[0][j]==1)

            {
#define sz(x) (int)x.size() 
	m=int(numbers[1])
  			{

       int temp=it->S[0];
#include<bits/stdc++.h>
  FOR(i,1,2*n)
	    cout<<"YES";
	
using namespace std;
	}
    }
  vector<ii> ans;
    int n,k;
		while(next!=start[k])
#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
      
	
    #define tr(x,it) for(auto it = x.begin();it!=x.end();++it)
			j--;
void query3(ll ss, ll se, ll qs, ll qe, ll x, ll val)
  		double angle=atan2(x1*y2-y1*x2,x1*x2+y1*y2);
  FOR(i,0,n-1)
typedef pair<int,int> ii;
            while (r < n && s[r - l] == s[r]) r++;
		else
    }
  map<string, vector<int> >::iterator it;
using namespace std;
  	for(int i=1;i<=q;i++)

  	edges[u].pb(mp(v,i));


  int m,n;
		 cout<<original[i]<<" ";
  	cin>>k;
  		cout<<"YES";
+ psbtkwbrerssvjsnphqycquptcgobsrsmulwqoowfiparjqisghvydmsftginzbbuoxmdnjkwanpjdyblhymklesgmcvldwfutuzhdlffauqdutrbsfmfjenxgikmgsizmhirupwvmmagftizyugjatgidrwjlelxnvoilkfzyfffznhxjnhjjpumiqwtvj
    {
}
 	    cout<<cost[x][y][z]<<endl;
typedef vector<int> vi;
	public static void main (String[] args) throws java.lang.Exception
int main(){
}
