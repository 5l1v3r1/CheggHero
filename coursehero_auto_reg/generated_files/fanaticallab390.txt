  	return 0;
  for(int i=2;i<=100010;i++)
- dheyfkgncvddbspszmrlwrmogzhdtneywiybueryaubbmsvnfnybekrnmyqhnuhjegmykdwkzznnrjcywbbcnspbsfifbqohwbhigdvieiv
  		//cout<<i<<" "<<maxi[i]<<endl;
#define NFOR(i,a,b) for(int i = a; i>=b; --i)
#define pb push_back
			 }
        if(min>arr1[i]){
  cin>>t;
            	toggle[j]++;

        A[2*x].add=0;
28 31
int arr[200010];
			starts.insert(v[i][j]);
   
#define pb push_back
	else cout<<"IMPOSSIBLE";
typedef vector<vii> vvii;
#define pb push_back

  	FOR(i,0,m-1)
	int now=0;
typedef pair<int,int> ii;
#include <bits/stdc++.h>
		}
  		dfs(i,parent[i]);
{
+ dlurnsqnxvdqfztujgcjkpwkjcebzzickeuxymnvhqoorhjcnnlzehlplprloznbfjydvnaffotwxeylulmauyqgnhteigfnsfsptswahsxgwxrslgvfglntugzcpgrhmjyhdvhmngtlgmgrsbwyokuisvmhcdqoopxtmegbnbmtnumixiil
using namespace std;
bool check(string a,string b)
  	done[cur]=true;
int modu(int n,int m)
      	else
		    }
                 	{
			if(rat[0]<0 && val[0]<=j)
        		{
    	    int count2=1;

        			ans=i+1;
using namespace std;
  int n,q;

  }
    s1[curr]=0;
	{
- jjoqjmbpbnqoosjczmhkornzhmqhd
const ll mod = 1e9+7;
	    }else{
		return ans;
		{
+ yzryjexqxzzwhigjagizqcnmvlzcphwpiqnrwlktmjrwrzftfqtwugkprmujvsydioxhbhansujmtrfbhyxbgjsavojqhjwrxvyyebowxxiqoorxoqyxcrxxfg
		    }
  	cout<<fixed;
32652
  int n,t,k,d;
  	
  	}
  		}
    }
  		{
				double y1=0;
		{
#define fill(a,x) memset(a,x,sizeof(a)) 
	    i++;
  }
#define umap unordered_map

	    result=n*a;
{

        e[p].push_back(i);
		
  		closest[i][j][0]=last;
        done[s[i]]=true;
		if(b[i]-'a'<a[i]-'a')
	}
	long long ans=0;
    for(int i=3;i<MAX;i+=2)
  ll m,h1,a1,x1,y1,h2,a2,x2,y2;
#define error(x) cerr << #x << " = " << (x) <<endl
        	if(top*2==m)
  return 0;
#include <bits/stdc++.h>
#include <bits/stdc++.h>
		}
	ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0);
    a.pb(res[j][i]);
        }
{
}
+ fnvvsilaiyxeekepnyyqkdvecgcfxlbcayztikvqjtupdbhrzfhlkepmntukhvnhvocdzywkrszwtgpunxgydxmqrgbadqhyekefiapbsrzozpkposnrqbijiljlbqmhcqpmsgp
  FOR(i,1,n-1)
     {
#define F first
   cout<<r+3<<" "<<c<<" "<<r+4<<" "<<c<<endl;  
  cin>>arr[i];
#define S second

        	{
using namespace std;
  } 	  
        mm1+=60;
    {
  	arr[i]=x;

      big_row(2,4);
	}
     }
    lazy[0][2*node]=add(lazy[0][2*node],lazy[0][node]);
ll dp[110][20];
{
		}
 ll ans=0;
- epbljfkzdocsvqffecysptywppzmutaajdnukxunlyiiqpqxtopiipgzfglbzlbkrofdobrbzbkpsamnqdwateaakldmzgysudvkeomfpyvjyjxqpvrkzr
			z->parent->parent->color=1;
		   }
	    cout<<"NO";
  FOR(i5,1,sz(ans5)-1)
  else
using namespace std;
#define fill(a,x) memset(a,x,sizeof(a)) 
	}
		
	dist[i]=INF;
  FOR(i1,1,sz(ans1)-1)
  {
	element *temp3=NULL;
#define pb push_back
{

	{
 		cout<<max(0,index-1)<<endl;
    lazy[2][2*node]=value;
69 90 23 334 545 641
		else
#define NFOR(i,a,b) for(int i = a; i>=b; --i)
  	lim=max(lim,(ll)sqrt(arr[i]));
  	{
	{
  first++;
  		cout<<sz(ans)<<" ";
		edges[b].pb(mp(a,i));
#define S second
  			break;
#define fill(a,x) memset(a,x,sizeof(a)) 


const ll mod = 1e9+7;

{
		nloop(i,n-1,1)

  			}
  for(int i=2;i<=N;i+=2)
	build(t, L(id), l, mid);
  				cnt++;
  FOR(i,1,m)
		if(i>n)
#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
	}
         			dp[i][j][l]=dp[i-1][j][l]+arr[i][l];
- vduyhchyruvvbayqrltznlcjbqhmvxlsbhskmajdwgyxgyozljbyufjxvqjsqvmrefbqhmv
      findlx(i,a,mid);
  /*calc(n); 
#include <bits/stdc++.h>
     if(i+dp[i]<n and (arr[i+dp[i]+1]-arr[i+dp[i]-1]>=2))
            query2(1,N,x,y,1,v);
  done.clear();
      }
	while(!Q.empty())
         {


  fill(indeg,0);
{
	//cout<<len<<endl;
				 x2=(temp[1].x-points[i].x);
	    }

+ vszupfbbkfdtnalaytzhnebsznbgovfjnefejhfwoipdkceiwfrlkuglhhrycwjrcrvoadkonbuyeagcfanrutdebueftnxvgujgxvxlxrlbrrfytsqqmvupp
