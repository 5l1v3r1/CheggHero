  	FOR(i,0,100)
	    else{
  fill(assign,0);
}
  while(r-l>1)
    {
			cin>>l>>r>>c;
  }
- dbtimwqspncvjiejxyhlvlqjatyrvorarmigkayapdxancjmctxxenigigyfwrfnfntppupeznemrpatixsomaxugxbcqgrvvnmkhcqgrwuknwdytxmhxlddiehykyvflirumjcfhwpwsuunrjwouztffafpabwolpixalejjvgepatilqygrrnxtsovv
#define S second
  	sort(arr[i].begin(),arr[i].end());


  return 0;
  int cnt=0;

        while(tmp3>0)
	  	else
  	
  	int u,v;
	}
  last[val[0].F]=0;

	   cout<<res; 

+ mkhxlxymhtjauqfcfxxqrgwcnjjdhmzwzgtmftzmoknjbsnislzjrvmhhxmqmlmnu
  int cur=h1;
			if(speed[i]<=cur)
  int c1 = curr<<1,c2 = c1|1,mid = l+r>>1;

ll arr[3000];
			if(y->color==1)


            }
#include <algorithm>
		if(ans %2)
   found=false;

  if (r > 1) return b;
  int cnt=1;
		   }
	v.push_back(2);
	cout<<val;
    }
   }
- msknbpmezxuanbllcssampcfsiicpttdndsqvhuwgrzvskhwezwqq
  cin>>n;
#define FOR(i,a,b) for(int i = a; i<=b; ++i)
   }
#define NFOR(i,a,b) for(int i = a; i>=b; --i)
		sum=sum-arr[i-1]+arr[i+k-1];    
				//cout<<angle0<<" "<<angle1<<" ";
#include <bits/stdc++.h>
  			mindist=min(mindist,10*(m-i));
  fast;
		if(count>0)
#include <bits/stdc++.h>
}
    maxi=max(p1+p2+p3,maxi);
from __future__ import division
  int n,q,s;
		max1=max1+max2;
		cout<<"Tuzik"<<endl;
  	else
  	FOR(j,0,sz(edges[i])-1)
			 
    }
	y->left=z;
  	else
	 for(int j=1;j<=n;j++)
                 		break;

using namespace std;
typedef pair<int,int> ii;
#define NFOR(i,a,b) for(int i = a; i>=b; --i)
	    }
                 		break;
  
  	}
  			}
    }
    for (int u: e[v])
#define sz(a) int((a).size())
int freq[10010];
#define S second

  	u1=a;u2=c;v1=b;v2=c;
int score[11];
  	int ed=2*st-1;
	}
  }
		sort(slopes,slopes+n);

						m--;
  cout<<ans[i]<<" ";
	out[s]=timer-1;
+ yzyelzaizlsggvjufvpufifnzjwsbxubyufltitutndz
   // Calculate span values for rest of the elements
  fill(donev,0);
const ll INF = 1e18;
        if (w[i][j] > w[i][k] + w[k][j]){
			cout<<d<<" "<<b<<endl;

  cout<<(n/2)+1<<endl;
	numbers=raw_input()
  cout<<sum<<endl;
typedef long long ll;
const ll INF = 1e18;
    for (i = 0; i < resn; i++)  result[i] = (int) (pga.data[i].a + 0.5);
  build(c2,mid+1,r);
				scanf("%Lf",&inp);
  	if(target%n)
typedef vector<int> vi;
  }
  FOR(i,1,sz(s)-1)
  		}
	int n;
    out[v] = timer++;

  Dijsktra(s);
		while(curL>q[i].l)
    	maxi=0;
  srand(time(NULL));
