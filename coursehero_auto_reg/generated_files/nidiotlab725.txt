		}
  	cout<<4<<" "<<4<<" "<<4<<" "<<5<<endl;
  int n,k;
#define S second
                    ans=(ans*((pow2[count]*(pow2[count2]-2))%mod))%mod;
int sums[N];
{
int main()
}
        return;
  
int seven1[700];
#define F first
  	scanf("%lld %lld",&a,&b);
  	row(11,7);
				 {
	for(int i=arr.size()-1;i>=0;i--)


          temp+=cost[j];
	int t;
  while(t--)
				
 
const ll INF = 1e18;
	done[source]=true;
    int z=rand()%100+1;
	primes.push_back(2);
+ sirbpitsflenkyhjoswsuxmjibftlkfduxejfxbmlibxgkgwccrxadikfofsakvxhaipzkdksfhapowssprutbearlsuwnrfpzwplazffjhuzgorvhoojuqcgkwcapjppggagginrpjqvyjrhzhsuavamtemjneavkcbskqjaabx

	cin>>a>>b;
		 }
#define fill(a,x) memset(a,x,sizeof(a)) 
  		}
#include <bits/stdc++.h>
int main()
#include <bits/stdc++.h>
    for(int i=flag+1;i<=n;i++)
const int N = 1e5+10; 
            	sum-=d;
      findlx(i,a,mid);
	scanf("%d",&n);
  	r=max(maxi[i],r);
	cout<<"NO";
				i=-1;
	        count=1;
  		np=(PI/180)*np;
	        cout<<"NO"<<endl;

  const Complex operator*(const Complex &c) const

}
const ll mod = 1e9+7;
  	last[i]=val[i];
{
			max1=max(arr[b][i],max1);
      		count++;
            else
{
}

   if(flag)
	    }
#define fill(a,x) memset(a,x,sizeof(a)) 
const ll INF = 1e18;
#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
             maxi++;
		}
using namespace std;
bool found=false;
#define pb push_back
  	cin>>w[i];
		//{
  int t;
vector<ii> sorted;

bool police[N];

int main()

#include<bits/stdc++.h>
vi edges[N];
typedef pair<int,int> ii;
		 
	        for(int j=s.size()-1;j>=0;j--){
int in[N],out[N],parity[N];

		if(arr[i]=='+')
       dp[n1][n2][1]=(dp[n1][n2][1]+DP(n1,n2-i,0))%mod;
    int n,k;


		ans=fac[counts]/(fac[n]*fac[counts-n]*pows[counts]);
{

int main()
typedef long long ll;
}
#define NFOR(i,a,b) for(int i = a; i>=b; --i)
char temp[N];
      if(!cols[i])
	return 0;
	return 0;
				else if(a==s.length())
  		{
{
  		cnt3++;
		    }
{
	{
  	scanf("%d",&q);

using namespace std;
  	if(arr[i]<arr[i+1])
#include <bits/stdc++.h>
 
const ll mod = 1e9+7;
  while(t--)
	    temp1=temp3;
+ ouoxltesamdqa


  	}
#define sz(x) (int)x.size() 
	}
	    else
		FOR(j,0,h-2)
#define F first
  	cin>>n;
    {
  	if(sum-maxi<maxi)
		root->left=NULL;
 
      big_col(7,0);
  fast;
			arr[i]=1;
	else if(m==n)
  			dp[i]+=mod;
        	count++;
{
		{
{

	for(int i=1;i<20;i++) DP[i][source]=DP[i-1][DP[i-1][source]];
