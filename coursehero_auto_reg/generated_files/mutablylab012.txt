#define S second
			
		
#define S second
	discovered[n]=true;
	scanf("%d",&arr[i]);

#include <bits/stdc++.h>
			if(s1[i]=='#' and s2[i]=='#')
    FOR(j,0,597)
  	}
    ll minval=INF;

    } 

	if(digitCount==countNext && digitCount!=0 && countNext!=0){
}
	int n;
                 continue;
				if(distup[source]!=-1)
	}
		}
    {
#define FOR(i,a,b) for(int i = a; i<=b; ++i)
	cout<<r+4<<" "<<c<<" "<<r+5<<" "<<c<<endl;
ostream &operator<<(ostream &os, const PT &p) {
        A[2*x+1].add-=M;
  	maxi[i]=-INF;
		if(cur+w<sz(s) and s[cur+w-1]=='-')
  {
#define pb push_back
queue<int> Q;
const ll mod = 1e9+7;

  
  		cout<<"False"<<endl;
typedef long long ll;
#include <bits/stdc++.h>
  while(t--)
             		s[i]=s[n-1-i]='a';
	int temp1,temp2,temp3,flag;
		Q.pop();
map<long long int,long long int> counts2;
		}

#define F first

     if(i+dp[i]<=n and i+dp[i]-2>0 and (arr[i+dp[i]]-arr[i+dp[i]-2]>=2))
#define S second
		discovered[i]=false;
#include<bits/stdc++.h>
long long int pes[100010];
  int ans=0;
      big_row(10,0);
    int i;
30 32
int seg[4*N];
ll val[100010];
    A[2*x+1].sum=((A[2*x+1].sum*A[x].mul)%M+(A[x].add*(se-m))%M);
			sums[i]=sums[i-1]+rat[i];
#define sz(x) (int)x.size() 
	    }
            if(can(m-i,sum-d))
		    temp=(long double)1;
ll best[100010];
    void update2(ll node,ll a,ll b,ll i,ll j,ll value){

#define FOR(i,a,b) for(int i = a; i<=b; ++i)
  dp[1]=1;
  cout<<dp[a];
#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)

  
#define mp make_pair
}
	counts[n]=1;
		if(n==1)

  c[0][1]=2;
int main() {
		FOR(j,0,h-2)
        

typedef vector<int> vi;
			for(int i=0;i<n;i++)
- ciqdmkvkfcpdkdzlzvkotodyfrukmmeouvrghptmripd
#define sz(x) (int)x.size() 
#define F first
const int N = 2e5+10; 
  			lookingfor=1;
  		}
    while(index1<index2)
j++;
typedef long long ll;

  	if(b==c and b!=a)
				 x2=(temp[1].x-points[i].x);
	        if((n-1)%3==0)
19182
	    }
  	FOR(i,1,n)

		sum++;
    for (int l = 1; l <= k; ++l) {
				temp->high=r;
const int N = 1e5+10; 
    	cin>>temp;
		if(DP(k-6,false)!='-' and len[0][k-6]<minlength)
  tot+=a[i];
#define sz(x) (int)x.size() 
			
	     
  cout<<arr[i]<<endl;
  	{
    
  		nl[0][i]=nl[0][i-1];
#define sz(x) (int)x.size() 
const ll INF = 1e18;
	long long int n,k;
	}
	}
typedef pair<int,int> ii;
{
#include <ext/pb_ds/tree_policy.hpp>
  fill(incr,0);
  	
			{
  	else
#define F first
        ll ansval=10000000000;
	    int rooms=sc.nextInt();
  	row(7,7);
        {
		{
    #define tr(x,it) for(auto it = x.begin();it!=x.end();++it)
	
+ yzcvuahvnbyefoylaterofpewtuqmhfkhjhdjozxpzbwncipvoglvvrspokdvpnezwikkjjcinaxpimmysxuooofcyiaqveprobdxlhhykepsqbtjypxodctdkvthzkaqmfpxpxxzbotupod
	{
	int t;
    ll mid=(a+b)>>1;

int counts[200010];
  }
  			//cout<<"dp "<<i<<" "<<j<<" is "<<dp[i][j]<<endl;
}

const ll INF = 1e18;
  	}

	

original[1][k]=temp[1][k];
using namespace std;
			flag=1;
  	cin>>arr[i];
                 {
			for(int j=i*i;j<=1000000;j+=i)
	
