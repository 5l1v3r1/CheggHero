map<ii,int> assign;
  	else
        done[index]=true;
#define NFOR(i,a,b) for(int i = a; i>=b; --i)
    {



	
    
				rightrotate(z);
  	}
		
#include <bits/stdc++.h>
  if(i%2)
  
			}
int main(){
      big_col(5,0);
			while(q.empty()==false)
  			arr[i].pb(mp(-1*temp,-1));
  	if(i+1<len and s[i+1]!='!')
- hnrmkssigaigzpafhfpjryqyztbvdbckotyynsgvtqbshexojoacnsaolblqcncsibqvtytoquiyagojwonlhnzuqnnucpmlseioebcxylxytlkpcxdlnehfruaumohevpuztxyrkvrdjbulbxwqcfvvaxpomwsjopihmjayerbnvx

		{
	
typedef vector<int> vi;
    else
#define F first
         	if(carry)
                 	if(arr[i+1]-arr[i]!=diff)
	if(a==0 && b==0 && c==0){
        } 
			for(int j=0;j<len1;j++)
			{

#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
  	bool flag=true;
	print(1,k);
	for(int i=0;i<n;i++)
const ll INF = 1e18;
  {
	       cout<<"YES\n";

				if(arr[i]<0)
  	}	

#define S second
	cin>>t;

  	
	for( i=0;i<n;i++)

  return 0;

typedef vector<int> vi;
  cout<<ans;
  			if(cur[k][j]>C[k]&&cur[k][i]>0&&D[i]>0){
  cout<<ans;
    }
	while(q--){
  cin>>n;
#define NFOR(i,a,b) for(int i = a; i>=b; --i)
#define FOR(i,a,b) for(int i = a; i<=b; ++i)
{
        diff=arr[1]-arr[0];
void print(int start,int k)
  {
typedef long long ll;


	if(flag==1)
  	


  	cout<<500-i<<" ";
const ll mod = 1e9+7;
         	    else

	        break;
  if(m==1)
  }
using namespace std;
  	}
    temp=((n*(n-1)-(zero*(zero-1)))*3)%MOD;
  			continue;
	
    treee[node]=add(treee[2*node],treee[2*node+1]);
  	}
	}
                   val=k;

  		continue;
      roots[i] = roots[i-1] * mult;
	        cin>>arr[i][j];
		}
#define NFOR(i,a,b) for(int i = a; i>=b; --i)
typedef pair<int,int> ii;
const ll INF = 1e18;
int main()
  	{
int main()
			rightrotate(z->parent->parent);
	for(int i=1;i<=n;i++)
	{
    typedef vector<vector<int> > vvi;
    {
}
}
  {
#define S second

#define NFOR(i,a,b) for(int i = a; i>=b; --i)
         for(ll j=0;j<prime_fac[i].size();j++)
	return (total<=L);
                 else if(i==ans)
- rchoyl
	for(int i=0;i<s1.size();i++){
}

1650
 
#define F first
  vector<Complex> roots;
  ll ans=0;
}

    if(i<=root)

int arr[100010];
  		temp/=2*b;

				double x2=(temp[0].x-points[i].x);
		}
int check()
  }
  }
         int count=0;
    
  			dp[i]+=mod;
	{

			
  		return 0;
#define fill(a,x) memset(a,x,sizeof(a)) 
		cin>>a>>b;
    	freq[it->F]=freq[it->F]%k;
    return ans;

ll mini[N];
        if(flag)
  {
			int u = p.x, w = p.y;
typedef vector<int> vi;

        cout<<"No"<<endl;

int main(){
    return false;
typedef vector<int> vi;
	
  beauty.clear();

int main(){
