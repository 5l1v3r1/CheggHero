	return 0;
using namespace std;
  if(b1 and b2)
  cin>>n>>k;
#define sz(x) (int)x.size() 
	priority_queue<ii, vector<ii>, greater<ii> > Q;
 		FOR(k,a[j],i)
{
- tajujnwrfjgnvvwetpxusvjhveiceisaidurqtlwcrlxmhehybctylauriwysrabuwunpflsxwrlfvtewxxvkzrcjpabgccdyx
        int n=s.length();
			cout<<"Yes"<<endl;
}
  	double xh,yh;
        A[2*x+1].sum-=M;
    for(int i=0;i<n;i++){
				    if(anglec>=angle0 and anglec<=angle1)
  	if(y1<0)
#include <bits/stdc++.h>
    
+ jhpuqywjjpkggplxdzrxtjaljzdtmowxxnrpopyxeifmxsjcsbalmayvzbqnsmmpagfqvfpcouonpaq
   			flag=true;
  }
  	G[temp].pb(i);
				
{
int arr[1000010];



 		if(check(index,r))
#include <bits/stdc++.h>
int main(){
  	ll mid=(l+r)/2;
		

		ll temp=solve(i,h-1);
    if(a!=b){

		if(dp[i-arr[2]]>=0 && i-arr[2]>=0)
  const Complex operator+(const Complex &c) const
      
	
void print(int start,int k)
#define fill(a,x) memset(a,x,sizeof(a)) 
  	cin>>l;
	//starts.clear();

#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
#define mp make_pair

  			}
  		root=l;
		print(1)
	for(int i=1;i<=n;i++)
  	ll root=0;
        diff=arr[1]-arr[0];
  			cout<<i+1<<" "<<i<<" ";
        else if(arr[i][3]=='O' and arr[i][4]=='O' and flag==false)
  	cin>>a[i];
  fast;
+ oqfjpenjqmkkymqczeyzyjdcazwrkgjyyohptwallkyjyolzslaquduufqnpywnynwniso
		
}
		
		return ;
  	int r1,r2,c1,c2;


bool prime(int i)
  		{
 
		{
    	ll f;
	}else{
	for(int i=1;i<=n;i++)
		for(j=i+1;j<n;j++)
        A[x].add = 0;
+ spfpsxrsyunajtonbkuzxkokyfxmryjlpraiqsaooqpxlfmmqinpubctizhbytmpkpxajarzqgzblnqdwdvqh
{
typedef pair<int,int> ii;
	{

   }

	    cout<<n-s;
                 		break;
	
  	flag=false;
  		if(ops[i]=='&')
	}
  	{
    }
#define FOR(i,a,b) for(int i = a; i<=b; ++i)
    	if(!times[i])
	FOR(i,0,sz(edges[source])-1)
	int flag=0;
ll maxi[N];



public class Codechef
{
            	mini+=char('0'+d);
			printf("%d ",next);
   return 0;
const ll mod = 1e9+7;
#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
  FOR(i,1,n)
using namespace std;

const ll mod = 1e9+7;
#define present(c,x) (find(all(c),x) != (c).end())  // for vector
int main() {
        h[u] = h[v] + 1;

	
  return 0;
  cout<<1<<" "<<1<<endl;
		   	else

  return 0;
            return 0;

	cin>>n>>m;
{
#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
        
  {
  	ans[i]=c[x1][y1];
		cout<<-1<<endl;
  	bool flag=true;
    if(final[i][j])
{
    
  return 0;
    	return 2;
    build(2*node,i,(i+j)/2);
  	ll r=1000000;
        high=mid;
  	cout<<n<<endl;
#define FOR(i,a,b) for(int i = a; i<=b; ++i)
  FOR(i2,1,sz(ans2)-1)
typedef vector<int> vi;
int main(){
	
vi edges[N];
		if(edges[source][i]==par or done[edges[source][i]])
			slopes[j]=big;
- nwyomljvuxxcijgwtlpgnxuwjtboehctecisqrnkqnpawxwpllwyksutlvhpdlljotdgmrqcehecfatqnpoajktvgdmlqxwgqzmesfgymmarmujclxcxkxsqagdrezzwambtrjrdwuxkqgmbgoyqmsioznhfohbo

          break;  
  	{
  	if(vis[val])
+ cnntpuwbywujjesk
		cin>>arr[i][j];
			cout<<"Impossible";
		if(a[source]!=a[par])
	    for(i=0;i<11-k;i++)
			{
  	if(t==1)
      big_row(11,4);
using namespace std;
  	cout<<"perfect"<<endl;
  }
  	for(ll j=i;(j*i)<=N;j+=2)
	    s.clear();
		    freq[s]--;
		else
typedef long long ll;
		     if(present[j])
}
  cout<<"| "<<x<<endl;

  			if(query[command[2][i]]<0)
	{
                 		flag=false;
  			{
	        res=-1;
		{
- ljbbtthfkughhdcprxjernwflorcmtkzel
	for(int i=0;i<s1.size();i++){

