	else
	cin>>t;
	FOR(i,0,sz(edges[source])-1)
    if(qe <= m)
  		else
	    

  		dp[0][i]=arr[i];
	}
	while(a>0 and b>0)
{
#define S second
	sort(arr,arr+n);
      ll mid=(a+b)/2;
      big_row(16,8);
#define tr(container, it) for(typeof(container.begin()) it = container.begin(); it != container.end(); it++)
    cout<<"? "<<1<<" "<<1<<" "<<n<<" "<<b<<endl;

- zljnbpwwnwunzgxbavdpswbqjzbrjvdignwkeugsqcfrietkby

ll forward[100010];
+ xcfk
	        continue;
    for(int i=1;i<n;i++)
		{

void bq()
	
  
				z=z->parent->parent;
using namespace std;
  	//toty+=arr[i].F.S;
  	 if(arr[1]%i==0 and siz>1)


1760
#include <bits/stdc++.h>
	    if(arr[i]==7 || arr[i]==4)
	long long ans=s+s*(q-1);
using namespace std;
		return fval2[source];
	return 0;
	for(int i=0;i<count;i++){
    lazy[2][node]=0;
- anduwewqrqvqqgoqywtviyvooowyawabldvjjtzdmwtcejscgmzqmwgakcalacolhlwsfyvtuovbyqdgefwqbeqmgszguptbapthnpckfyldoqluvjkznc
    maxi=max(m2+o2+p2,maxi);

	
59 20 4 54 97 555
	    i+=m;
#define NFOR(i,a,b) for(int i = a; i>=b; --i)
	{
			
void _union(int a,int b)
  		s[i]='K';
   {
{

        cout<<"0";
#define S second
#include<bits/stdc++.h>

	    


#define S second
  cin>>arr[i];
#define pb push_back
typedef vector<int> vi;

      	{
typedef vector<int> vi;
		else
- wfleihbhgswmqhqrbhwomggyctdgypfuuqaezelgyhuoqkfrreiemqeqjhwiwdestfyvjjdhtxxjhcdbinfvdllmskwqndkhiietrhcmezwndbomovjtguhagequhadrihkcooounmhqnyedtnwckecqkvkrvnigwukmiyg

  			break;
public class Codechef
    if(A[x].ini!=-1)
ll mods(ll a,ll b)
                 continue;
#define sz(x) (int)x.size() 
#define sz(x) (int)x.size() 
        exact[i]=0;
  while(t--)
#include <bits/stdc++.h>
	x->parent->right=y;
#define pb push_back

  fast;

    	{
using namespace std;
    out.resize(n);
  	}
  }
  freopen("in.txt", "w", stdout);

       dp[i][1]=min(dp[i-1][0],dp[i-1][2]);	
      	 found=true;
vector<ii> arr;
	else
             	p1=x1,p2=y1;
#define all(x) x.begin(), x.end()
      big_col(12,8);
	
using namespace std;
  
	    arr2[i]=s1[i]-'0';

        mm1+=60;
  				ansindex=arr[i]-1;
