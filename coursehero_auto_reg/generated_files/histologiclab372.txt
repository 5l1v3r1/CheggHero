	
	   printf("%d",start[i]);
  	edges[u].pb(v);
using namespace std;
vii edges[1010];
}
}
    }
int main() {
25991
const int N = 1e5+10; 
#define S second
#define FOR(i,a,b) for(int i = a; i<=b; ++i)
        s(x);
			i=i+4;
  		}
	}
	int n;
typedef vector<int> vi;
+ zxbygqsreazczzeglaofxghtxonsdopensftlxnpzotzozfbztgzc
		{

				{
    build_tree((node<<1)|1,mid+1,b);
                 	}
typedef long long ll;
    {
#define S second
}
    maxi=max(m1+o1+p1,maxi);

{
    	cout<<maxi-1<<endl;

  {
using namespace std;
            l1++;
typedef vector<int> vi;
	{
  			xorval^=arr[j];
#include<bits/stdc++.h>
                 }
+ xwjjnutfgvejcrcurumcgzqmytbscenzawlnsevbcbkgsoamknqqmidmcgggkthlpsakxxlzaxfvlhhvuzojhtvlzctlxbyptzzsyktzjauuidrechnlalzbpsnmvlbrmcjnodoxditlnlspufcvs
			cur=trie[cur][bit];

	}

		for(i=0;i<k;i++)
  {
	bfs(n,m);
  fill(dp,-1);
            	  }            
  	dp[i]=1;
{
void sort(int start,int end)
#define sz(x) (int)x.size() 
          data[j+md2] = data[j] - t;
  fill(cnt,0);
    else
const ll INF = 1e18;
#define sz(x) (int)x.size() 
	//cout<<root<<" decr"<<decr[root]<<endl;
	}
    tree[kd][pos]=(cy-cx+1)-tree[kd][pos];
		adj[ver[t][id]].pb({ver[t][L(id)], 0}),
  fast;
		if((val-(b[i]/a[i]))>eps)
  	cin>>x>>y>>z;

			{
    #define INF 1000000007


	cin>>n>>m>>p;
#define FOR(i,a,b) for(int i = a; i<=b; ++i)
	}
    /*for(int i=0;i<n;i++)
		else

	cout<<r<<" "<<c+4<<" "<<r<<" "<<c+5<<endl;
vector<ii> C;


  }
	int t,n,i,j,count1,count2,max1,max2;
  		flag2=true;
    int t=1;
for(k=start1;k<=end2;k++)
#define FOR(i,a,b) for(int i = a; i<=b; ++i)
typedef vector<int> vi;
        while(freq[arr[j]]>1)
		{
  		edges[y].pb(x);
	}
  	cin>>u>>v>>w;
ll atleast[1000010];
  cost[i]=INF,seen[i]=false;
	else if(par)
  FOR(i,1,tot)
typedef long long ll;
	int n,m;
	while(t--)
        {
const ll mod = 1e9+7;
  		cin>>temp;

  freopen("output.txt", "w", stdout);	

	    temp+=i;
#define NFOR(i,a,b) for(int i = a; i>=b; --i)
			ans=m/n;

  	}
	while(t--)
const int N = 5e3+10; 
  }
#include<math.h>
36655
			}
  PT operator - (const PT &p)  const { return PT(x-p.x, y-p.y); }
#define FOR(i,a,b) for(int i = a; i<=b; ++i)
    	temp/=sp[temp];
			
	    	i++;

  FOR(j,1,n)
            if(!lpd[i])
  	cout<<"YES";
				//cout<<"dp["<<i<<"]["<<j<<"] is"<<dp[i][j]<<endl;
                    break;
	return 0;
  	cin>>temp;
        {

	ll arr1[100001];
using namespace std;
	
#define pb push_back
  {
					if(s[1]=='.')
{
	while(q.empty()==false)
const ll mod = 1e9+7;
8 10
        int temp = r[v][i];


       	if(a==b)
#define sz(x) (int)x.size() 
#define fill(a,x) memset(a,x,sizeof(a)) 
	int n;
		if(a==1)
  fast;
       if (exact[freq[arr[i]]]==0)
}
	        }else if(x==arr[j][0] && y>arr[j][1]){
    A[2*x].sum=((A[2*x].sum*A[x].mul)%M+(A[x].add*(m-ss+1))%M);
  		cin>>arr[i];
  	}
  	cout<<fixed;
int temp[2][2000];
		{
int minim(int a,int b,int c)
int main()
        cin>>arr[i];
				ind=temp/2;
  {
#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
  		cout<<1<<endl;
#define NFOR(i,a,b) for(int i = a; i>=b; --i)
     		death[arr[i]]++;
		{
  	cout<<ans<<endl;
string s;
	
		e[i].clear();
                 		break;


