  {
#define F first
	{
  		index*=10;
    int l=0;
#include <bits/stdc++.h>
  }  
	}
}
  	ll temp=mod_inverse(y,md/g)*x;
    while(A[2*x+1].add>M)
#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
		}
		cout<<n*n-count<<endl;	
ll aux[510][510];
  		cout<<x<<" "<<y<<endl;
				else if(s[a-2]=='.' and s[a]=='.')
  	cin>>u>>v;
  dp[i][0]=0;
  dfs(1,0,1);
  }
else

		if(cur[1]+2<sz(w[1]) and m>=3)
#define sz(x) (int)x.size() 
		dfsup(edges[source][i],source);
  FOR(i,2,n-k+1)
  
#define tr(container, it) for(typeof(container.begin()) it = container.begin(); it != container.end(); it++)
			cur[3]++;
        	{
	for(int i=1001;i<1000000;i+=2)
#define F first
                		ans+=mod;
 		l=mid;

        A[2*x].mul=1;
    return z;
					angle0+=(double)360;
  	{

		{
int cnt[700][700];
#define FOR(i,a,b) for(int i = a; i<=b; ++i)
	}
	
      	flag=false;
{
#define S second

  		if(n%i==0)
	}
	}
    n = (1 << s);
  cin>>n;
	               }
using namespace std;


  		cout<<calc(t,flip)<<endl;
		printf("%lld\n",dp[n-1][k]);
    }
	    cin>>arr[i];
			

    int i, j;
	    count++;
  	edges[v].pb(u);
    else return false;

	cout<<ans;
		{
}
		return;
	int dummy[100];
typedef vector< vi > vvi;
};

  		{
int weight[N];

+ uywmbxoqkruucgwzmpnhjdbumazxfktzjpnkmedyvxszfqbtfoaotb
		}
	
  }
  				FOR(l,0,2)
    int n,k;    

    sort(sorted.begin(),sorted.end());
		if(done[i]==false)

  int n;
	        cout<<s[i];
	
    using namespace __gnu_pbds;
		}
		
	FOR(i,1,n)
typedef pair<int,int> ii;
using namespace std;
		
	dis[source]=1;
  x=x+(1<<i);
  FOR(i,0,sz(s)-1)
  	cin>>n;
       else if(n>=5)
