     }
  	ll l=1;
    if(rem==3)
  int s, n;
  
int main()
#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
#define fill(a,x) memset(a,x,sizeof(a)) 
#define F first
		ans+=b;
  fast;
#define sz(x) (int)x.size() 
	primes.push_back(2);
int main() {
  if(sz(C)>1)
  first++;
#define loop(i,a,b) for(int i=int(a);i<=int(b);++i)
      cout<<ans[count-1]<<endl;
  	}
  	{
		x1=s-y1*(p-y1);
  		cin>>l>>r;
	{
#define F first
  {
  ans=r;
  	{
	 	return 0;
vector< pair<int,ii> > edges[N];
		{

			count++;
}
  int t;
    }
	            res=i;
   cout<<"6yahan aa gya apun with "<<ans[2][2][2]<<endl;
  			pos-=n;
		int n,m;
  			}
  	cout<<endl;
  update(c2,mid+1,r,index,val);
  	dp[i]=min(dp[i/2]+y,dp[i-1]+x);
  }

        for (int i = 0; i < n; i++)
- itycatrkazuliyxsqmnlevtwlmbswubgpbksubcuaxfkxddprqbxnuvaixuerxkiyuasxdmzcujzzopqgsptolvwiqcbnojmkmejrtitnt
  int maxi=0;
#include <bits/stdc++.h>
	
	  	if(arr[i]==n+1)
		if(edges[source][i]!=par)

{
	    i+=k;
		   for(int j=2*i;j<=1000010;j+=i)

	if(a==b)

	}
#define all(x) x.begin(), x.end()
  		{
  sums[0]=0;
        A[2*x].add-=M;
  FOR(i,1,n-1)
#define tr(container, it) for(typeof(container.begin()) it = container.begin(); it != container.end(); it++)
  		c[2]=s[i+2];
  //cout<<check(1.24)<<endl;
}

#define S second
int main(){
	return 0;
	scanf("%d %d",&n,&m);
      {	
  			else
 		cout<<l<<endl;
    if(lazy[1][node]!=1||lazy[0][node]!=0){
	}else{
#define present(c,x) (find(all(c),x) != (c).end())  // for vector

  {
{
  FOR(i,0,599)
	n=int(numbers[0])
{
+ hryzxpgpykrlezybwvwmuwnifelonuxxoxylmfamptxwsvxqstcmprvvwillcikqfjdtqghfzgdscaiwvnlleiicqtqsdclkloddumj
  if(l == r){
#define pb push_back
#define S second
	    }
		l+=l-1;
		typeof(nums[i-1].begin()) it2=nums[i-1].begin();
{
		if(abs(i)+abs(j)!=1)
  	else
		len=s1.length();
void dfs(int s,int p,int pr)
	        countr++;
    maxi=max(p1+p2+p3,maxi);
	double p,s;
#define F first
			ans++;

	}
  	int n;
  			cnt[1-st][pos-rity[1-st][i]<=0 ? pos-rity[1-st][i]+n : pos-rity[1-st][i]]++;

    int maxx = 0;
int main(){
  	if(h[u1]>h[u2])
      inp[sen[j]][i]+=temp;
  		ll sum=0;
		x1=s-y1*(p-y1);
    int taken=0;

}
  cin>>t;
const ll INF = 1e18;
typedef long long ll;
    ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0);
             	p1=x4,p2=y4;

#define FOR(i,a,b) for(int i = a; i<=b; ++i)


using namespace std;
+ loraqktbulrdwpntadljzghmepcedneqdyruimxcxofvdvogacrziznpqptudzkizdchpbmmpthvqybqasritfxkusgzuq
	int n,k;
}
  string ans1,ans2;
    }
+ rwttwmhmyylyjlpjdxiflvvorajkhivbhoufadtycfzlsqwwoedbcyrtadfklblsphasktsoyrctkypafsbhsscsviejlpdawdujxnzxgbqqc
    return 0;
  	}
  		dp[1][i]=arr[i];
  cin>>n>>m>>k;
  	if(s[i]!='!')
#define pb push_back
+ ougbdphujcksgdehzzahjxgmmbjgrmufjbhosqibtsuzvyixxigignuuofbfsvmdyvrqmzsftmgpmqojyutghqbxvcepzrsymjoyigdeultgbjrcdlinblkwpporggpssftcmwgi

int main() {
      }

  int n;
  		r=mid;
  FOR(i,1,n)

  for(it = beauty.begin(); it != beauty.end(); it++)
		}
- uwgnmszqazpnnuohbdtcyhzqcokeqoymmgzazyrbziomecwfhpjiwlaabkhtyhgmohmngfqhqewujscs
	int n;
#define fill(a,x) memset(a,x,sizeof(a)) 
          data[j+md2] = data[j] - t;
+ zoasckmiptiywvhltbjwiyhwwi

	x->parent->right=y;

	return 0;
#define NFOR(i,a,b) for(int i = a; i>=b; --i)
+ sqboaujietmgenutknmnwmftentnelfwdhnfbyqhrcpvqlqcycpxququhmhnzpkcwxkzvagocyjujawielhvhzrolbekqoponbnkbvyfvjaflypskwptxgijjmvbcmprnebocbwxkwcywtqgpfannkyxyvyciotvuwmwxiujgwhcqxlhenwszw
  {
				put(n/2);
		return 0;

	int val=maxee(2*min1,max);

	build(10);
#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
+ uljxinevvnjtzpsrykcujrxzugazqxemlnktaqpydateplvpwajhtijnojoghstsiflkvcibechvpflnfuvydentpbawwvqgceqz
  for(int i=2;i<=100010;i++)
      big_col(2,8);
long long INF = 1e12;
	cin>>m>>n>>a;

  	if(c[3]=='R')
#define errop(a) cerr<<#a<<" = ( "<<((a).x)<<" , "<<((a).y)<<" )\n";
int road[N];
const ll mod = 1e9+7;
	{
  	cout<<4<<" "<<4<<" "<<4<<" "<<5<<endl;
	{
			{

