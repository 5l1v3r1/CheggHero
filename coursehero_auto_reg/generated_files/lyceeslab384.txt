//This code for FloydWarshall is taken from the Standford ACM Notebook.
  {
                 	}
	
			//bitset<64> x = num;
+ eonebmwxepqgajfgoofhyzgyxdyzsvgyjvfmhdjluztulbabphkohqmgumfohlnqgucpxlarnvmyyobowlefbslvfqkmdzflthasvcjixxiwojmmwqrxievpuhczihkdqkvnmgx
	for(int i=1001;i<1000000;i+=2)
  		sums+=arr[i];
  int n,m,k;
#define fill(a,x) memset(a,x,sizeof(a)) 
  	ansfor[i]=0;
  	if(cur==a2)
  FOR(i,1,n)

  return 0;
  FOR(T,1,t)
                    
				continue;
	}

		{
using namespace std;
    ans.clear();
  	cin>>n;

	    count++;
#define F first
		return 0; 
#define FOR(i,a,b) for(int i = a; i<=b; ++i)
    hh1=24;
	return 0;
  FOR(i,0,sz(b)-1)
#define NFOR(i,a,b) for(int i = a; i>=b; --i)
	return (a*b >= c);
		return;
    cout<<"? "<<1<<" "<<1<<" "<<n<<" "<<b<<endl;
      if(temp.compare(ans2.substr(j,ans1.length())))
	
void dfs(int v, int q) {
	{
21025

	
#define S second
set<int> s;
  int c1 = curr<<1,c2 = c1|1,mid = l+r>>1;
  int mindist=mod;

using namespace std;
+ asggqxzdpuvklpvltoerkabogcnmuhaxbidtffwxzrhmicxcqctdcwtkygwvpysrhxkoejldctqlxppqrkvthofhwbemcyflwrzcangdgyqfnfvhpscygigdlmrnlwajnclqptvxrlchsaqhss
    	ans=0;
typedef vector<int> vi;
int arr[200010];

  {
    for(int i=len-1;i>0;i--)
  		if(!dfs(i,0))
  	}
      big_col(9,4);
  return 0;
  	FOR(i,1,o2)
    if(C[i].F<=c)
	//rightrotate(z);
	 		}
#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
  cin>>n>>m;
        done[s[i]]=true;
		 {
14588

  double x = (d*d-R*R+r*r)/(2*d);
		cout<<maxv<<" "<<maxc<<endl;
int main(){
		while(r-l>1)
    for(i=1;i<31;i++)
#define fill(a,x) memset(a,x,sizeof(a)) 
  	{
		cin>>n>>c;
#include <bits/stdc++.h>
int main(){
  	{
+ rtsjqnezetjrhacklnofuwzefxgcllscgmnwzrxdniwujyhumxbiuapbxvfkjxmpkboltlpiulefmnzalcihexidvnnenbtzcjkxxbfrpkybzxbkblrfjbigrvkgwdhyptwmxdfmpdppc
	
typedef pair<int,int> ii;
int main()
		}
int main(){
		else
    	index=arr[i];
			cout<<d<<" "<<b<<endl;

- irkywbsdhhqognsgirsixcrsusfpmlmwfyudanhjwxxcmpivjcfiezayrhpfvecacyfcnmnjmloycwvnzbwfayetgtbdxfdcdketxuclhqjjpfxqivvitzdzveeujjwpuditxkeedppswokejfodhseeyjyisxxoafhzrlfwdwqzl
                 		break;
- nflwwgfgjxrqerjrkfhvtqazahgojzbyemucvbkgabxesivcnfxixaixhqnsprqufmyanjhnmetfopjbujj
		return 0;
  {
#define fill(a,x) memset(a,x,sizeof(a)) 
  	    s2=s1;
 	FOR(k,a[0],i)
#include <iostream>
                    break;
  		closest[i][j][1]=last;
    	return 0;
     for(int i=0;i<len;i++)
using namespace std;
using namespace std;

	for(int i=1;i<=1000010;i++)
- bckojztroozyeaidgajpretdglfugkuhogwyhrrxgqwk
int tree[MAX];
#include <bits/stdc++.h>
  FOR(i,1,n)

    cout<<n-1<<"SL"<<endl;
typedef pair<int,int> ii;
			cur[1]++;
    sum=(sum+(mb[i]*choose(d[i],2)))%MOD;
const ll mod = 1e9+7;
}
const ll mod = 1e9+7;
            }

                 {
	}
	if(y->left!=NULL)
	    
#define tr(container, it) for(typeof(container.begin()) it = container.begin(); it != container.end(); it++)
  	cin>>s;
typedef vector<int> vi;
- yzyyrdbaexwhfzxyfttdyccvicjkmiwkhujbzmdgkaprbmqgfjkfnoax
        res2=mm1-mm2;
int indeg[N];

			dfs(edges[source][i]);

			
		freq[val[x]]++;
        diff=arr[1]-arr[0];
	p=int(numbers[2])
 	continue;
int times=0;
+ bhjsmypdqkurqvjjnhwpvbzjqldjjaznhkftjuzzgvsyqehdldthguqxhtgtvigdunwdhveprxnjbunoaivieohohqhfynisceyjceavdpegltvlbqwiedwotfttubowhmhlshgwwlcjgxxkqtsuwqkqvfjpixnqlubebkczve

     		//cout<<"pushing "<<arr[i]<<endl;
       }
int modu(int n,int m)
	    i+=k;
        if(done[s[i]] and (!done[t[i]]))
	loop(i,0,sz(edges[root])-1)
#define pb push_back
			ans=inp;
string s;
	}
  	
  {
    cout<<dollar-n;
  l1=l2=0;
  	int cnt=0;
const ll INF = 1e18;
  	{
  		temp[idx++]=arr[j][k];
        		}
  first*=t;
