
using namespace __gnu_pbds;
       //cout<<i<<" "<<temp[i]<<endl;
  	scanf("%d",&q);
  			cout<<arr[2]<<" "<<arr[3]<<" "<<arr[1]<<endl;
  	int sum=0;
	{
  	cout<<"yes"<<endl;
#define pb push_back
#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
		if(z->low<x->low)
  fast;

  	fill(dp,0);
       int k=1;
	     	temp=temp+original[i];
		}
	    }

 		ll mid=(l+r)/2;

		
}
#define pb push_back
  		else if(mid*mid*mid < num)
                        
  		ans++;

}
				 	{
      {	
  dfs(1,0);
void print(int start,int k)
  FOR(i,1,n)
  getline(cin,s);
  				//cout<<"breaking because "<<route[0][j]<<" "<<route[1][j]<<endl;
#define S second
void magic(int Q1)
typedef pair<int,int> ii;
#define fill(a,x) memset(a,x,sizeof(a)) 
	

		{
	if(flag)
#include<iostream>
	c[0][0]=1;
#define present(c,x) (find(all(c),x) != (c).end())  // for vector
  		cnt++;
#define F first
	}
  }
  	if(done[cur])
    {
 
	cin>>n>>m>>p;
   			break;
    return z;
		 			if(s[j]=='?')
#define S second
#define F first
		}
             		flag=false;
			for(int i=k+1;i<2000;i++)
30 32
int main() {
  ll ans=0;
typedef pair<int,int> ii;
       	ans[i][2][1]=a;
typedef pair<int,int> ii;
    FOR(i,1,n)
            }
	        count=1;
  FOR(i,1,n)
        else if(q==2)
  			ans[ansf]=t[igf];

    for (i = 0; i < n; i++) pga.data[i] = pga.data[i] * pgb.data[i];
    		{
- lxgwfnvvshgdzjigqclvgdzwvupjhzqvxwtemoaexiiwusckvnhbshxndpxkophnmasyquencojyhoicdqfwzfjcuiokywymyqmrmqeqhqpoexshpxdoepsaxhlxfjjdbxunqbdxrulxsdejc
   cout<<mini<<" "<<maxi<<endl;
	}else{
  	    big_col(i,0);

  			int d=ans1.length()*i;
  } 
				intersect.pb(mp(angle0,0));
			if(arr[i]==arr[i]*k)

    {
  	}
  	FOR(i,0,n-1)
       for(int j=i*i;j<N;j+=2*i)
    	return dp[index];

{
    update3(node*2,a,(a+b)/2,i,j,value);
- gaauakcenyisrwrrfmiuwffgefmbpebvedqgnulbstvlqocxcntaubizgvcwzerghjmvfxyytvljjoiobdovexwlszhtdabkmohrnhricdrorbcufqrjnowhnfdsieeuumnkthsykmmdnoxugqeuecdtiglqlqmhezrzgkxswlvlzuginmetohnwoyobqaiuccuk
		    if(i==0)
        flag=true;
- ehwdrsivebxtasrnbbaxdyajfsprehxiquojowhuxgnaygnzhqykoywvtnpxumfmivvyresplhpjnelwujjlifgbuvyqkfcubztseljptaaihlfbvqodvvgpsgfeljzoisjofsdavejcrqfmgupdrxujdbqpkrfujojqhorcuc
  FOR(i,1,n)
        } 

}

		max2=n-count1;
     		{
		return 0;
  update(c2,mid+1,r,index,val);
			FOR(j,-1,1)
		loop(i,0,n-1)
    
  	if(arr[cur]==cur)
  		if(ans<0)
				 		break;
	 		}
  {
  temp=(n*(n-1)*(n-2)-(zero*(zero-1)*(zero-2)))%MOD;
ll mini[N],maxi[N];
	{
int main()
	}


  }
	}
int main()
		int flag=1;
typedef long long ll;
  	if(temp==n)
		    
    }
ll dp[N];
- axdrlheewudaclbepdhlwtzdcgfnufdueglqprummxoqkrubuentzowbxbqriwlpcyfurbgfawvkoqmiwzbvpxwmaoflkqapqhliirninjudbg
using namespace std;
            if(flag)

			}
                 if(i==2 and i+2<n)
                 }
#include<stdio.h>

    treee[node]=mul((b-a+1),value);
                 		break;
 		while(r-l>1)
 		else
  if(l>=left and r<=right)
  }
	long long int sum;
  	w[i][i+1]=w[i+1][i]=1;
- iqbhbwzmranfevtnomgfxobwafjadnwndzwhvxtoxgteborpdaxaqawsfiskvqyzpugmszarhwvimpaprxphxobfwuprmpqcmyqgxrxgpvpbkrtboiknwlsufk
	
}
