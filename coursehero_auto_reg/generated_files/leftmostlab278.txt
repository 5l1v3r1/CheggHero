
	{
	
}
	z->color=1;
- juewcquhmo
  fast;
  	else
  {
    ll add(ll a,ll b){
  	else
  fast;
    A[x].sum = (A[2*x].sum + A[2*x+1].sum)%M;
      big_row(6,8);
  fast;
    if(a!=b){
  		if(n1<=b and b%n1==0 and sqn2<=b and b%sqn2==0)
    int i, j;
	}
  {
  		else
#define sz(x) (int)x.size() 
  	{
  ll ans=0;

	{
  	cin>>n;
  	FloydWarshall(n);
ll dp[N];
  	}


int par1[N];
  return 0;
  	column(9,7);
  }
                 		flag=false;
}
const int N = 1e6+10; 
  cin>>t;
      C.pb(mp(p,b));
  ll final=0;
#define sz(x) (int)x.size() 
       row(4,0);
char alphabet[]={'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'};
- aqvyseliqnegblblvspspqgozgvfkrznhvnazakrqqxrbyfysurimxylfvssorhwmwynzihpyeicfnaxjrhvqigyfysuszqexquwyblyhwamlbmvuvsndbllzdftexabnuynxllejotvrfqlciygllrloygsvgwkauxxhkeryxoreefgofoarhnhftac
      findly(i,a,mid);
const ll INF = 1e18;
 	while(r-l>1)
  dp[1]=x;
	cin>>n>>m;
			//delete y;
+ bedvnayzcsortskqykuobzukmobsxqvbxyykawlerzwktiasswgwwbgiriapavqxvoiymve
	while(t--)
+ negheolsmqcnsftuymbogonozwwaddntjuankliydklysgsqv
        while(n>0){
  cin>>n;
   FOR(i,0,len-1)
int sp[N];
#define sz(x) (int)x.size() 
      if(k==1)
	   column(c,r+0);
  }
  	arr[j][i]=(arr[j-1][i]=='9' ? '0':arr[j-1][i]+1);
#define all(x) x.begin(), x.end()
typedef pair<int,int> ii;
  	cur=(x1*cur+y1)%m;
  
#define FOR(i,a,b) for(int i = a; i<=b; ++i)
  	    s1=it->F;
  		if(n1<=b and b%n1==0 and sqn2<=b and b%sqn2==0)
long long int powers[31];

      }
    else
    	cout<<-1<<endl;
  	if((x+y+z-3*k)%2 and k>=1)
  	FOR(i,1,n)
#include<bits/stdc++.h>
}

		 
	     	for(i=0;i<n-1;i++)
       if(val==-2)

  int ans=0;
  void setSize(int ns)
		    
  cin>>n>>k;
	t=t-1
#define FOR(i,a,b) for(int i = a; i<=b; ++i)
  			break;
}
		for(int i=0;i<n;i++)
		}
	int t,k,i,temp,count1,count2;
  {
using namespace std;
int main(){
	    cin>>c;
  allowed[i]=true;
		ver.push_back(i);
#define sz(x) (int)x.size() 
void dfs(int v, int q) {
  	cout<<-1;
  		if(arr[i][j]=='#')
typedef vector<int> vi;
    void update3(ll node,ll a,ll b,ll i,ll j,ll value){
			done[next]=1;
					else if(i>0)
  		}
        {
typedef vector<int> vi;
*/
  ans=max(ans,death[i]);
typedef vector<int> vi;
int color[110];
                {
  cin>>arr[i];
  cin>>a[i];
	    	freq[maxi]++;
int sums[N];
+ fhezrgdaxiejhexodrseinxblzooor
	}
#include<bits/stdc++.h>
        {
    double radius= m12;
  fast;
			a=a/2;

  	ans+=max((ll)0,(1LL*(sz(edges[i])-1)*(sz(edges[i])-2))/2);
	}
	return true;
  	for(ll k=1;k<=q;k++){
int main(){

        
  		cout<<"Ladia"<<endl;
	        if(!flag){
#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
       {        
ll dp[5010][5010];
  //cout<<check(1.24)<<endl;

  FOR(i,1,n)
    return a>b?a:b;
30 32
        A[2*x].sum=(A[2*x].ini*(m-ss+1))%M;
  	{
  		if(arr[i][j]=='?' and vis[i][j]==false)
#include <bits/stdc++.h>
  cin>>t;
	long long int n;
vector<vi> prime_fac(100010);
  	char c;
  fill(dp,0);
  FOR(i,1,n)
				if(x+i>0 and x+i<=n and y+j>0 and y+j<=n and (arr[x+i][y+j]=='P' or arr[x+i][y+j]=='G') )

ll ans;
    {

	
    if(a!=b){
  cin>>n>>d;
    {
		val[i]=600;
  int n;
	if(dp[index]!= -1)
ll query[N];
            	break;
  int n,a,b,k;
#define FOR(i,a,b) for(int i = a; i<=b; ++i)
    while(temp>1)
			pow2[i]+=mod;

{ 
  		ll mid=(l+r)/2;
	if((sum+counts)%2==1 || sum+counts<0 ||sum>counts)
                 		break;

        
