
		edges[b][a]=true;
  if (a == b) {
    int tri=0,seg=0;

		}
  		if(edges[s][i].F==p)
#include<bits/stdc++.h>
  	flag=false;

  fast;

  int ans=check();
		if(edges[source][i]==par or vis[edges[source][i]])

  {
  		cout<<"First";
 		else if(check(index,l))
         			}
typedef pair<ll,ll> ii;
#include <bits/stdc++.h>
    }
             		flag=false;
			done[next]=1;
    }
		
int original[2][2000];

}
		FOR(i,1,a[l+1])
  	ll y=val[where[maxidx]].S;

  	cin>>x>>y;
typedef vector<int> vi;
	}
}
#include<iostream>
typedef vector<int> vi;

typedef long long ll;
    if(res1<=9 && res2<=9)
	if (g > 1) return -1;
      findlx(i,a,mid);
	
  }*/
	if(m%a==0){
   found=false;
 
vi eulertour;
  	int n;
+ fvhekzhnosblkxaojmahcvfbhjtvgwqlsasezzsntvafubtdnwnrrsuybouhkmuemmjnndagydlsghxtd
			 
	cout<<r<<" "<<c+3<<" "<<r<<" "<<c+4<<endl;
const ll INF = 1e18;
typedef vector<int> vi;

  	dp[0][0][i][0]=1+dp[0][0][i-1][0];
  			if(a[j]==target)
  {
#define S second
		else
		
}
#define F first
		for(i=0;i<k;i++)
  	else
  	    	{
       	exact[freq[arr[i]]]=arr[i];
		dfs1(s,l+1);
    if(r1 and r2)
+ xcfk
			continue;
int val[N];

        res2=mm1-mm2;
		if(sum==newsum)
		if(c=='r')

	
}
  	cin>>temp;

}
	v.push_back(2);
	        System.out.println(res);

	
int in_deg[1010];
		bool done=false;
    {
  fill(flow,0);
  	else
#define sz(x) (int)x.size() 
- kdgaafqmjnsnppecgzbjdulinbxitnwdqcdtjvfsizhaplcxlfgqbry
      big_col(10,0);
using namespace std;
typedef pair<int,int> ii;
#define sz(x) (int)x.size() 

  cout<<"& "<<x<<endl;
#define fill(a,x) memset(a,x,sizeof(a)) 
typedef long long ll;
typedef pair<int,int> ii;
                 continue;
    A[2*x].sum=((A[2*x].sum*A[x].mul)%M+(A[x].add*(m-ss+1))%M);

            return 0;
   // Calculate span values for rest of the elements
  		}
#include <iostream>
       	freq[arr[i]]--;
    Sieve();
  	cin>>n;
  ans.pb(mp(-1,ans1[0].S+ans2[0].S+ans3[0].S+ans4[0].S+ans5[0].S+ans6[0].S+ans7[0].S+ans8[0].S)); 
                 		break;
                 
  	{
 {
    	}
const ll INF = 1e18;
        dp[j][y]=prevs[j][y];
	return 0;
    ll add(ll a,ll b){
  {
	if(n%a==0){
        diff=arr[1]-arr[0];

	long long ans=s+s*(q-1);
	}
		   }
		    temp=(long double)1;
	for(int i=0;i<n;i++)
	return 0;
int main()
const int N = 50; 
      fval2[source]=min(fval2[source],fval2[edge[source][i]]);      
#define fill(a,x) memset(a,x,sizeof(a)) 
ll n;
	return dp[index][r];
			}
  cin>>a[i];
	}
- ebidzzpexkkthjqrihttzvxfxzkwycmfduievxjshvoofeipobjnzg
	public static void main (String[] args) throws java.lang.Exception
  first*=t;
  	{
    	return 0;
#define FOR(i,a,b) for(int i = a; i<=b; ++i)
				done[l]=false;
#define pb push_back

	return (a%b + b)%b;
  }
#define sz(x) (int)x.size() 
 			index=l;
	sort(arr,arr+n);
             		break;
  		}
  	}
        cout<<ans<<endl;
  int t;
#define NFOR(i,a,b) for(int i = a; i>=b; --i)


}
  	else
  	int p,x,y;
using namespace std;
vector<ii> arr[N];
void _size(int a)
	{
  				dp[2][i][j][k]+=1;
		}
	}
#define pb push_back
  }
#define S second
  	return 0;
#define pb push_back
#define fill(a,x) memset(a,x,sizeof(a)) 
		mini=min(mini,arr[i+n-1]-arr[i]);
	for(int i=1;i<=n;i++)
	            break;
#define sz(x) (int)x.size() 

