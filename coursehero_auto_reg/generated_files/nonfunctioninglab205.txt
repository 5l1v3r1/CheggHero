
  int n,m,k;
  if(l > y || r < x)return 0;
  			}
	int t;
		count++;
+ yfkkudjnwydfunlrxvjahbedsoyadzrbfbnbewocushrfuifqrhxvlbnabpdcgghhtlnrzpot
       ll mid=(a+b)/2;
        

               if(beauty[s1][i]+beauty[s2][i]>0)
  		ll n1=a/root;
+ lbrdkhffbbrqffzgtvvifyslkvuiufuhinnuwsaxttpayqgulecscvdpsyxmftuqghkebmbugtwgjeaxifpncvcutbiaxcqflbkonnkvggcqlcnvjeilzmhsqqvnulsgoeweshzynbqygfurkedjrmehczwxmqfbvbhnignwkewsjsjtxodqbjzfi
	sums[0]=0;
	int l1,l2,l3,b1,b2,b3;
  	FOR(i,1,n-1)
  	{
int score[11];
                 continue;
        {
	cin>>a>>b;
#define For(i,a,b) for(int (i)=(a);(i) < (b); ++(i))
#include <bits/stdc++.h>
    
	{

    
    for(int i=1;i<=n;i++)

  return 0;
	int count=0;


typedef long long ll;
#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
bool edges[101][101];
+ cetdamadjafkbxacfppqvmhylrfwtakwggbgsckeerofopiwgzocnvcbohxjjkfpshymliqpbfvpufnagbetygwmpwwagdqamomzydpzkmqgte
using namespace std;
        	cin>>arr[i][j];
}
ll exact[1000010];
	{
		int flag=1;
  mini[0]=0;
	
typedef vector<int> vi;
		
				}
  	prefixsum[i]=prefixsum[i-1]+L[i];
  }
					break;
int arr[50];
const ll mod = 1e9+7;
22 85 78 374 250 104

        	dis[top*2]=dis[top]+1;
+ bhixioaiocohohnnffqmhtvzkuunfesglcdtrfbhhrowablfjdtsyprkjoxqsrwfubangdwoukmunzbwcuoajimvyjlsakzwlzlschiwtushvtfxn
	}
	   return 0;
}
	int m,n,a,b,result;
  fast;
			q.push(top-1);
  string s;
const ll INF = 1e18;
typedef vector<ii> vii;
		if(rows[i].empty()==false)
ii arr[N]; 
+ prshzlfdgjegkigbkvlwhslkubgwoxmgqgnrruwyebeojmrvhdtrvhbrijny
	    prod=0;
            else
#define S second
  	cin>>a>>b>>c;
	}else{
	}
const int N = 1e6+10; 
		

	int newcur=0;
  	   }*/	
		
  	sort(arr[i].begin(),arr[i].end());
             }
				if(a==1)
const int N = 2e5+10; 
const ll mod = 1e9+7;
	 j=j/10;
  		}
void mini(int m)
  while(t--)
  		query3(1,1,n,l,r,v,w);
    {

#define S second
		}
	int a;
+ lwpsffqegrlxotivkwtwzdwwsqdqwzrhxgcdnujvnvtcodzbztxyyvxqlcgibzrbhvgvppsfklhbqgcpbbozwnrhpzrtyjuigcdwrvbcjkdzshrwihvgupplohepsaxyccw
#include <algorithm>

    {
- sznvhjuofngknpjomvwthqhzgtuqzqpsqepznmnuzwennpdznzvwpcvxxrnwieq
const ll INF = 1e18;

bool vis[N];
  			flag=false;
	else
	memset(in_deg,0,n+1);
  while(t--)
		r=index;
			for(j=0;j<n;j++)
- hcudndaygbmkhymwqnkiwrriwgwzdojmqfrfirfpvsbcqnbicnqyfj
const ll INF = 1e18;
  {
    else
typedef vector<int> vi;
  	if(temp==0 and len>1)
int solve(int n,int cost)
  return 0;
typedef vector<int> vi;
#include <bits/stdc++.h>
  	big_row(5,0);
  fast;
}
const ll mod = 1e9+7;
vector<int> dis(10001);
#define sz(x) (int)x.size() 
  	if(arr[i][j]=='.' and arr[i][j-1]=='.')
    {
long long arr[110][110];
const int N = 50; 
	cout<<"NO";

		lvl[l]=1;
#define S second
  ll ans=pre[2];
int main()
  for(int i=2;i<n;i+=2)
  dp[0]=0;
using namespace std;
	   dp[type][pos]=-2;
const int N = 1e5+10; 
		else
  	}
					 done[j]--;
	{
	return 0;
