typedef long long ll;
    }
			Vis(arr[curR--]);
	int mini=10000000;
	        }
	cout<<count;
  cin>>n>>e;
  cin>>t;
  {
  	bool flag=true;
  }
        	cout<<-1<<endl;
const int N = 2e5+10; 
       row(7,4);
  if(t1==m+2 or t2==m+2)

typedef vector< vi > vvi;
    }
    if(a>b||a>j||b<i)return;
    //cout<<n1<<" "<<n2<<" "<<p<<" "<<dp[n1][n2][p]<<endl;
#define S second
		{
  ans+=DP(i,k);
	}
		else
	return 0;
}
  	ll rem=a%m;
  		}
	
int main(){
  	    	int sizes=min(sz(beauty[s1]),sz(beauty[s2]));
const int N = 1e5+10; 

  	cin>>n>>m;
                if(h%t==0)
  return 0;
	hh2=hour1;
  {
  {
	sieve();
+ gmezwvfmmvzcyejsltojxztnmtaymtptfvubtbphxqjxvupgogpnfkdtddrpwikdghgziwihmrfhnwndeerlouerzxjxgtaoainlexstqza
int a[N];
	return 0;
  cin>>x1>>y1;
const ll mod = 1e9+7;
	int n,m;
#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
#define FOR(i,a,b) for(int i = a; i<=b; ++i)
	for(int i=0;i<minc;i++)
  			FOR(i,-1,1)

	flag=1;


#define fill(a,x) memset(a,x,sizeof(a)) 
		if(ret1<0)
    	if(sum+arr[i]<= m)
typedef vector<int> vi;

  return 0;
#include<bits/stdc++.h>
  			cout<<"Win ";
#define NFOR(i,a,b) for(int i = a; i>=b; --i)
		if(LCA[q[i].id])
#define sz(x) (int)x.size() 
  int t;
  	ll r=1000000;
	discovered[n]=true;

#include <bits/stdc++.h>

#define pb push_back
		cin>>n;
	}
            if(t[j]!=s[i])
using namespace std;
	        }else if(x>arr[j][0] && y==arr[j][1]){
	    }
using namespace std;
                }
#define FOR(i,a,b) for(int i = a; i<=b; ++i)
			cin>>original[i];
	int t,n,k;
#define fill(a,x) memset(a,x,sizeof(a)) 

int main(){
- vhhkfnvfeavvzmyeahutxzzdjqefcopyxykclihrkcnkrnqrukntmmyxecchsthpstufbbxmgmyxboqwyfpmtqjysmhnfqcxjwfnaebgqzfrpxppdhcwxlwrzfefvjefhjujnvrfuwzluqazxcvwquopzuuxfbepmyyctsjpoickzcjyfhvvdlkefhbnk
        {
	}
typedef pair<int,int> ii;
	for(int i=0;i<n-1;i++)
  		}
using namespace std;
        		{
typedef pair<int,int> ii;
	}
		
  return 0;
	     if(sum<=c)
	                   bit=0;
int n;
            while (r < n && s[r - l] == s[r]) r++;
  	{
const ll INF = 1e18;
  	{
#define FOR(i,a,b) for(int i = a; i<=b; ++i)
  return 0;
const ll INF = 1e18;
- vxtprucrqe
 
  pows[0]=1;
    cout<<ans<<endl;
		
		       }
    {

  				FOR(l,0,2)
        
	cin>>q;
		if(DP(k-6,false)!='-' and len[0][k-6]<minlength)
        }
for(k=start1;k<=end2;k++)
           flag1=0;
vector<ii> edges[N];
	{
int q2 = query_tree(1+node*2, 1+(a+b)/2, b, i, j); // Query right child
int level=-1;
  	{
  			cout<<"Lose ";
using namespace std;
copy(start,end);
