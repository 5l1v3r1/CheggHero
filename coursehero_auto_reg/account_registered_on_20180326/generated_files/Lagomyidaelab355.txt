				if(x<original[0][i])
#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
		{
  	if(val==1000 and flag1)
	cout<<count;
  fast;

    
	}
typedef pair<int,int> ii;
         if(!taken[i])
int size,maxi;
    		return dp[i][j][state];
 
  return 0;
		if(s[i]=='V')
		return cnt;
{
  	    column(i,10);
const ll mod = 1e9+7;
	 for(j=0;j<n;j++)
  ans=max(ans,suff[n]);

  fill(vis,0);
	cout<<res*100/n;
    while(A[2*x+1].sum>M)

pt = grand_parent_pt;
{
    if(type)
	    }
	return temp;
#define pb push_back
  {
	        
	loop(i,1,p)
#define fill(a,x) memset(a,x,sizeof(a)) 
   
  }
ll incr[N];
	}
#define fill(a,x) memset(a,x,sizeof(a)) 
#define F first
	minicost=min(minicost,t*c+(X+Y+Z)*a);
#define sz(x) (int)x.size() 
  int s1,s2,e1,e2;

  if(n==20)


        dp[j][y]=prevs[j][y];
  check(1,0,2,0);
#define pb push_back
int n;
  		dp[i]%=mod;
#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
  ans2+=freq[len]-1;
**/
};
+ zmmmujkfsosddcryoaxrspguwtsphfdgrrsnadvutnxyrrxftuwllchhycyfhembvgoyjjsfysdpjaxewtphywqwypbitnjquxqfjlkhdqzosysprjyphpnigpqbebtyykgjvstaiuob
        {
	else
#define NFOR(i,a,b) for(int i = a; i>=b; --i)
#define sz(x) (int)x.size() 
		
  	{
+ qwexogsvcdvsxlzqeqazxmwaqbjtmyfcvl
  	t=queries[i].F;
  			{
  	}	
}
typedef long long ll;

	
  	else
using namespace std;
  {
	    temp1=temp3;
  cin>>pass;
	cin>>n;
int main() {
			    
  		}
  	return 0;
    {
int a1,a2,a3,a4,a5,a6;
			cout<<"C";
  	sums+=a;
#define FOR(i,a,b) for(int i = a; i<=b; ++i)
		}
- fkfcvgxdompsfgascqtttjvdgxfcktvpdarbhqexcwqkcscgkxzfjvipuqrgjmvnppqyfwvksnuwhyftwgyfdjwyzneibcxqrnqymokgbgdlhiefqfkuoisnvyvycvrvkhwwvgdzpikwsqbivnejvywsxuqbrhxbrtambflqnxmhonrjcwvxurptniveruiinixqpkh
{
      big_col(8,4);
		freq[it->first]=temp;
#define ll long long int
			k++;
  int n,m;
import java.lang.*;
	if(p==0)
				temp->high=r;
		}
  {
  reverse(ret.begin(), ret.end());

  			taken[(j+num)%3][i]=1;
		cin>>inp;

			}
 		ans=ans*q-y;
      if(n==1)
			 		prev=i;
	}
{
const ll INF = 1e18;
+ bweuyylwxdpssofjhyswyqgakmsctbxvxbrwzduzijrbxymgwfdxvlxhzsjsvgptkhrlmlmuwgxvekcbrhaoszvrtglp
		if(i==0)
  }
void dfs(int s,int par)
  			if(y1 >= sty and y1 < sty+k)
	cin>>n;

#define F first
  cout<<sum<<endl;
  return 0;
#include<iostream>
  	int temp;
  FOR(i,1,n)
#define S second

	if(lo!=hi)
		 	if(count2==count)
int main()
  			}
		for(int i=0;i<n;i++)
#define F first
{
	}
       row(4,4);
  	}
  	{
	return 0;
- krbdovyjovcrvadogoupkyjxyejmawzkndpbyqkmlofioixxyrmisygqcrecndocgeghuqvhhbp
	    result+=f(n,i)*f(m,t-i);
    }
    }
  {
  return 0;
        {
		/*for(int i=0;i<t;i++)

}
{
  		if(cnt==rem)
	}
  	if(a[i]!=1 and a[i-1]!=1)

		max1=max1+max2;
	    char ch;
