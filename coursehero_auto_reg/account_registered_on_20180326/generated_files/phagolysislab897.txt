#define pb push_back

	}
    {
			cin>>arr[i][j];
#define FOR(i,a,b) for(int i = a; i<=b; ++i)
  cin>>n>>k;

			
typedef vector<int> vi;
int arr[N];

		{
  	present[temp]=true;


        		cur--;
    }
			{
			ans=freq[k];
// hp matlab HoPayega.....Tribe se churaya hai !!
       	{
}
  {
	    cout<<"SEGMENT";
	{
stack<ii> nbr[N];
  				cost[i][j][k]=cost[i][j-1][k]+A;

      big_row(12,4);
		return INF;
		{
  col[0]=0;
    }
#define NFOR(i,a,b) for(int i = a; i>=b; --i)
       row(4,0);

#define loop(i,a,b) for(int i=int(a);i<=int(b);++i)
  }
  {
int n,e;
	
{

            return dp[i][j][state];
#define sz(x) (int)x.size() 
	    if(res>0){
	cout<<r<<" "<<c+3<<" "<<r<<" "<<c+4<<endl;
typedef vector<int> vi;
    while(index<m and arr[index]<=def[i]) 
  	if(s[i]=='A' or s[i]=='E' or s[i]=='I' or s[i]=='O' or s[i]=='U' or s[i]=='Y')

  cout<<endl;
  
		    	continue;
			//delete y;
		 rights.push_back(make_pair(x,a));
}
}
    int y=rand()%100+1;
    update_tree(node<<1,a,mid);
	}
     
const int N = 1e5+10; 

	int toast3=p/np;

}
  }
class RBTree {
	if(n%3==0){
#define FOR(i,a,b) for(int i = a; i<=b; ++i)

		cout<<2<<endl;
const int N = 1e5+10; 
	cout<<count[0];
    for(int i=0;i<n;i++)
  later.clear();
}
#define INF 10000000
  		cout<<0;
  fast;
}
    int cur = 0;
    if(rem<D[0].F)
  cin>>t;
for (; (b % (a%b)) != 0; i++)
- xvowzhvbvqtnnfvulbyopbiwesrjzruwnkvotqpqikdvpbsacqqrrznvthguaatpmoeggvwpgcmvdeyfwowpplmiutfvvykimqqummlsqyptenydewstkheeajbvhodvevpsib
		}
typedef long long ll;
#include<bits/stdc++.h>
const ll mod = 1e9+7;
  				FOR(l,0,2)
	for(int i=0;i<m;i++)
  cout<<max(1,calc());
  int q = max(query(c1,l,mid,x,y),query(c2,mid+1,r,x,y));
    sort(ans.begin(),ans.end());
	
    {
    else
    	cout<<-1<<endl;
