- jbhdcpdthwbdp
                ans=ans*(m+1);

    return temp;
  		else
	parity[s]=pr;
	return 0;
	int dc=gcd(p,6);
mul[node]=1;
using namespace std;
  	{
	
int main()
		
  fast;
        	ans=ans*2;
			dfs2(i);
		}
ll query() {
		}
update_tree2(1,0,n-1,a-1,b-1,v);
int present[N];
    while(temp>=INF)temp-=INF;

  dp[i][0][1]=dp[0][i][0]=0;
void calpow()
else {
typedef pair<int,int> ii;
  			break;
			if(color[tp[s][i]])
    }
		}
const ll INF = 1e18;
#define pb push_back
	
  			even+=num%10;
      b2=max(b2,D[i].S);
struct node
  	cin>>n>>k;
    {
	
- kidhjvmnjhjntaojbvhyxverbuddvxqfftpqqbdzjpperdpsaxtzsxqttvzqtpvykmpbqucblrffwvxxssymprikmhafwygikxjctodhhjmegldaebotswghdgobgukrtvtplzwtkixqtc
    		if(ans %2)
	while(t--)
         
  int n;
#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
		prob[s]=1;
  	FOR(i,1,m)
  		
#define pb push_back
const int N = 2e5+10; 
			}
/*  else if(n==2)
	{
			return false;

  			ans=dfs(i,0);
  
  for(int i=0;i<n;i++)
  			}
}
	v.push_back(2);
	    h0=h;
typedef pair<int, int> ii;
#include <bits/stdc++.h>
	done[i]=false;
  if(l > y || r < x)return 0;
				
    }
			}
{
}
- dazssifimdkkxmpadtzomheojemftfjxhkpzuwhgautziizlcycqigfrkrzdyicfvshpqoysir
update_tree3(node*2, a, (a+b)/2, i, j, value);
61914
}
return;
+ xlivehyqlgljzbasxwxwnkhietpku
    vis[i][j].S=mod;
int toggle[410];

	int i=n/50;

			v.push_back(i);
            	cout<<-1<<endl;
typedef vector<int> vi;
	    }else{
	
	int counts=1;
  {
}
vector<ii> C;
  		int val=0;
 **/
else
  		{
#include<bits/stdc++.h>
		 				s[j]='A';
int a,b,c;
  		cout<<ans<<endl;
  	cout<<r-l+1;
    {
	
    {
  		cout<<"no"<<endl;
#define FOR(i,a,b) for(int i = a; i<=b; ++i)
  cin>>a[i];
					done=dfs(trie[cur][i],s+test.substr(i,1),1);
    a[1][1]=v4;
		          	//cout<<i<<j<<endl;
           }
  	for(int j=0;j<n;j++)
     	atk.pb(c);
SegmentTreeNode() : total(0), pendingUpdate(false) {}
#define INF 10000000
    return s[curr].a[0][1];
  }

    }
		 if(i+25>=len)
#define NFOR(i,a,b) for(int i = a; i>=b; --i)


		
typedef long long ll;
int k1,k2;
         diff=arr[1]-arr[0];

rotate_right(root, parent_pt);
				if(arr[i]<0)
		while(k<n)
	
    typedef vector<vii> vvii;
                 	}
	  cin>>arr[i];

		root->v.clear();
#define F first
#define pb push_back

  	if(possible(mid))
  			break;
  int ans=0;
#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
    {
#define NFOR(i,a,b) for(int i = a; i>=b; --i)
  			}
  cout<<ans;
  check(4,1,3,z);
  vis[x]^=1;
    {
  fill(present,0);

    {
